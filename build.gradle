buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "Jiggen"
        gdxVersion = '1.9.7'
        roboVMVersion = '2.3.1'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.1'

        junitPlatformVersion = '1.0.2'
        junitJupiterVersion  = '5.0.2'
        log4jVersion         = '2.9.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
        
    }
}

project(":core") {
    apply plugin: "java"
    apply plugin: 'org.junit.platform.gradle.plugin'

    junitPlatform {
        // platformVersion '1.0.2'
        filters {
            engines {
                // include 'junit-jupiter', 'junit-vintage'
                // exclude 'custom-engine'
            }
            tags {
                // include 'fast'
                exclude 'slow'
            }
            // includeClassNamePattern '.*Test'
        }
        // enableStandardTestTask true
        // reportsDir file('build/test-results/junit-platform') // this is the default
        logManager 'org.apache.logging.log4j.jul.LogManager'
    }

    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"

        // JUnit Jupiter API and TestEngine implementation
        testCompile("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
        testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")

        // To avoid compiler warnings about @API annotations in JUnit code
        testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')

        // To use Log4J's LogManager
        testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
        testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

        // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
        testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
    }
}

tasks.eclipse.doLast {
    delete ".project"
}