import org.wisepersist.gradle.plugins.gwt.GwtSuperDev

apply plugin: "java"
apply plugin: "jetty"

gwt {
    gwtVersion='2.8.0' // Should match the gwt version used for building the gwt backend
    maxHeapSize="1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize="1G"

    src = files(file("src/")) // Needs to be in front of "modules" below.
    modules 'com.github.eoinf.jiggen.GdxDefinition'
    devModules 'com.github.eoinf.jiggen.GdxDefinitionSuperdev'
    project.webAppDirName = 'react/build'

    generateJsInteropExports = true;

    compiler {
        strict = true;
        disableCastChecking = true;
    }
}

task draftRun(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war')
    webApp=draftWar.archivePath
    daemon=true
}


task compileReactDev(type: Exec) {
    environment 'REACT_APP_PUBLIC_URL', '/html'
    environment 'PUBLIC_URL', '/html'
    environment 'REACT_APP_API_URL', 'http://outterest.com/jiggen-backend'
    environment 'REACT_APP_SHOW_SUPERDEV', 'true'
    workingDir = 'react'
    commandLine 'cmd', '/c', 'npm run build'
}

task compileReactProd(type: Exec) {
    environment 'REACT_APP_PUBLIC_URL', '/jiggen'
    environment 'PUBLIC_URL', '/jiggen'
    environment 'REACT_APP_API_URL', '/jiggen-backend'
    workingDir = 'react'
    commandLine 'cmd', '/c', 'npm run build'
}

task superDev(type: GwtSuperDev, dependsOn: [draftRun, compileReactDev]) {
    doFirst {
        gwt.modules = gwt.devModules
        generateJsInteropExports = true;
    }
}

task dist(dependsOn: [clean, compileGwt, compileReactProd]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
            }
        copy {
            from "war"
            into "build/dist"
        }
        copy {
            from "react/build"
            into "build/dist"
        }
    }
}

draftWar {
   from "war"
}

task addSource << {
	sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]


eclipse.project {
    name = appName + "-html"
}
